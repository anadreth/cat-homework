@import "tailwindcss";
@plugin "@tailwindcss/forms";

@custom-variant dark (&:where(.dark, .dark *));

/* Apply Geist font globally */
:root {
  font-family: 'Geist Sans', sans-serif;
}

/* Gridstack container must receive pointer events and cover full area */
.grid-stack {
  pointer-events: auto !important;
  touch-action: none !important;
  width: 100% !important;
  min-height: calc(100vh - 8rem) !important;
}

/* Gridstack placeholder styling for drag-in - just shadow, moves smoothly */
.grid-stack > .grid-stack-placeholder {
  background: rgba(0, 0, 0, 0.05) !important;
  border: none !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
  transition: none !important; /* No transition for instant movement */
  will-change: transform !important;
}

/* Make the drag helper visible and follow cursor smoothly */
.ui-draggable-dragging {
  z-index: 9999 !important;
  pointer-events: none !important;
  transition: none !important; /* No transition for instant movement */
  will-change: transform !important;
  display: block !important; /* Ensure helper is visible */
  visibility: visible !important;
  opacity: 0.9 !important;
}

/* Ensure grid items receive drag-over events */
.grid-stack-item {
  pointer-events: auto !important;
}

/* Ensure grid accepts drops in empty areas */
.grid-stack:empty::before {
  content: '';
  display: block;
  width: 100%;
  min-height: calc(100vh - 8rem);
  pointer-events: auto;
}

@theme {
  --animate-hide: hide 150ms cubic-bezier(0.16, 1, 0.3, 1);
  --animate-slide-down-and-fade: slideDownAndFade 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-slide-left-and-fade: slideLeftAndFade 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-slide-up-and-fade: slideUpAndFade 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-slide-right-and-fade: slideRightAndFade 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-accordion-open: accordionOpen 150ms cubic-bezier(0.87, 0, 0.13, 1);
  --animate-accordion-close: accordionClose 150ms cubic-bezier(0.87, 0, 0.13, 1);
  --animate-dialog-overlay-show: dialogOverlayShow 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-dialog-content-show: dialogContentShow 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-drawer-slide-left-and-fade: drawerSlideLeftAndFade 150ms
    cubic-bezier(0.16, 1, 0.3, 1);
  --animate-drawer-slide-right-and-fade: drawerSlideRightAndFade 150ms ease-in;

  @keyframes hide {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
  @keyframes slideDownAndFade {
    from {
      opacity: 0;
      transform: translateY(-6px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes slideLeftAndFade {
    from {
      opacity: 0;
      transform: translateX(6px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes slideUpAndFade {
    from {
      opacity: 0;
      transform: translateY(6px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes slideRightAndFade {
    from {
      opacity: 0;
      transform: translateX(-6px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes accordionOpen {
    from {
      height: 0px;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordionClose {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0px;
    }
  }
  @keyframes dialogOverlayShow {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes dialogContentShow {
    from {
      opacity: 0;
      transform: translate(-50%, -45%) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  }
  @keyframes drawerSlideLeftAndFade {
    from {
      opacity: 0;
      transform: translateX(100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  @keyframes drawerSlideRightAndFade {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(100%);
    }
  }
}